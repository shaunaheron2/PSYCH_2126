[["index.html", "PSYCH 2126: Term Assignment Chapter 1 Introduction", " PSYCH 2126: Term Assignment S. Heron for Dr. Emond’s Psych Class 2024-01-21 Chapter 1 Introduction This guidebook will walk you through all of the steps necessary to complete your term assignment. Get ready, because you are embarking on a journey… a journey from the safe GUI world point-and-click world of SPSS to the code-based Thunderdome of R. Where we’re going… The goal of the assignment is twofold: First, to give you the opportunity to flex what you are learning in class, and two, to introduce you R Statistical Software; a game-changer in any future research endeavors. This guide is meant as a companion to your assignment. It is not meant to be an in depth course on R, as that would be several entire courses on its own, but by the end you will have had a small taste of R and its capabilities. And who knows, it might ignite a spark of curiosity that jump starts a desire to learn more. By the end of this assignment, you will have read a bunch of interesting research papers, designed a mini study based on a theory of your choice and completed some analyses and a full write up in R that you will hand in. Your paper will include everything a person would need to reproduce your experiment from start to finish. Don’t worry about HOW we’ll do this yet, just know that you will. A few things R can do: Advanced statistical analyses without paying for packages (its open source!) The best data visualization capabilities of ANY statistical software Reproducible research is made easy, integral partner of Open Science research Thousands of free online resources to learn anything you don’t know Did I say its open source.. ? Make gorgeous publication ready papers and books with inline analyses Make gorgeous slideshows with analyses and text all in one document Make gorgeous websites (This website you’re reading is made 100% in R) Juice up your resume (researchers with R skills are a HUGE asset and hard to come by) Help you understand data better because the analysis isn’t happening behind a graphic user interface Ramp up your street cred 1000%. "],["cross.html", "Chapter 2 The Assignment 2.1 Meet Kahneman &amp; Tversky 2.2 Assignment Stage 1 2.3 Assignment Stage 2 2.4 Assignment Stage 3 2.5 Assignment Checklist", " Chapter 2 The Assignment 2.1 Meet Kahneman &amp; Tversky Amos Tversky (left: 1937-1996) and Daniel Kahneman (right: 1934-) transformed the field of behavioural economics in the 70s and 80s. Collaborating on groundbreaking research, they challenged traditional economic theories of “rational behaviour” by revealing the systematic biases and cognitive errors characteristic of human decision-making. The work of these two will be the focus of your research. Daniel Kahneman was awarded the Nobel Peace Prize in 2002 for his and Amos’ groundbreaking work in human decision-making. 2.2 Assignment Stage 1 Your first job is to find one of K&amp;T’s original research papers with Google Scholar or the Laurentian Omni library. Next, find 9 more studies that each build on the study before. So, your first study will be a Kahneman and Tversky study, next, a study that sits on the shoulders of that study, then another that progressed from that study, and so on until you find a study conducted between 2020 and today. A minimum of 10 articles should be cited. As Dr. Emond says, “Kind of like six degrees of separation but with citations”. As you’re reading, make note of theories that interest you. You will eventually pick one to design an experiment around. 2.3 Assignment Stage 2 Next you will choose one of T&amp;K’s well-tested theories and design your own experiment to test it. Steps to complete: Write a brief introduction to the topic, explaining the theory you are exploring and referencing the article(s) it is based on. You will place this in the intro section of the document you create. Be sure to state your hypothesis and any other questions you would like to answer clearly. Make sure to operationally define your independent variable(s) and dependent variable(s). Keep in mind you should choose a design that demonstrates your understanding of the concepts learned in class. A factorial design will blow our socks off. Describe your design and procedure clearly in the Methods section. Do not forget to explain how you will control for any confounding variables. For all of the parts above, complete descriptions must be given. In full detail. Also, you must justify all of your choices. Why you decided to design it the way you did and define your variables the way you did. Once these steps are close to completion you can move to the next step: 2.4 Assignment Stage 3 There are a couple of ways you can tackle this next step, integrating your write-up with your R analyses: Do your write up in Word first, then copy and paste it into R when you’re ready. Do what I do, write directly in R. HOWEVER, because R can be intimidating and confusing at first and I don’t want you losing hours of work with a mistake, it might be smart to have a copy of your write up in Word or Google Docs, just in case! Once you get the knack of R you’ll never have to use Word as back up again. But for now, it might give you peace of mind and its very easy to copy and paste your write up directly into R. It’s what I did in the beginning and it worked like a charm. Steps to complete in R: Install R and R Studio and customize your workspace (see R Tutorials). Create a set of data that your design (and specific dependent variable) would produce. What would your data look like? I will help with this part! No need to worry about it yet, first do your research, write up your intro and methods and THEN we’ll create the data. Once you have your dataset, you will dig into analyses with R. You’ll find a video tutorial to follow (see Analysis Tutorial that will be uploaded by February 10th) where l will walk you through how to visualize your data, conduct your analysis (ANOVA, correlations or anything else your heart desires), and finally save it all as a pdf. Create at least one data visualization that conveys your main results. Write a BRIEF summary of your “findings” (mini-results) in your Results section. Copy and paste your write-up into your R document. Remember, there’s an Introduction, Methods, Results and a short Discussion/Conclusion. Finally, write a very brief conclusion wrapping it all up and including at least two sentences that include two things you learned or didn’t learn during this assignment! Hand in everything as a pdf (this step will be included in the video tutorial). If you have trouble with any part of this assignment, email me at sheron@laurentian.ca to set up a zoom or in person meeting. I’m here to help! 2.5 Assignment Checklist Your final submission will be a knitted R Markdown pdf document that includes: A brief introduction to the topic, explaining the theory you are exploring and referencing the article(s) it is based on. This should be in the introduction section. A clearly stated hypothesis. Make sure to operationally define your independent variable(s) and dependent variable(s). Keep in mind you should choose a design that demonstrates your understanding of the concepts learned in class. A factorial design will blow our socks off. A Methods section that describes your design and procedure clearly. Do not forget to explain how you will control for any confounding variables. A visualization of your outcome variable’s distribution (e.g. histogram) At least one visualization that conveys your main results (e.g. your treatment effect). A BRIEF summary of your “findings” in the Results section. A very brief conclusion wrapping it all up and including at least two sentences that include two things you learned or didn’t learn during this assignment! Hand in everything as a knitted pdf (see tutorial). Don’t wait until the last minute to ask for help! Email me anytime and I should get back within 24 hours sheron@laurentian.ca to set up a zoom or in person meeting. I’m here to help! Tutorial for Part II Next you will download the MY_ASSIGNMENT template I created for you and copy it to the root directory of your project folder. Once copied to your project folder, from the R Studio workspace, go the file pane and select the file you just placed there. This should open the R Markdown document in your workspace. I created this document to work like a template. You can simply replace my prompts and text with your own. R Markdown Let’s get acquainted with your first R Markdown document. The first thing you might want to do is rename it (right-click on the tab and click rename). Try knitting the document next. Click on the Knit icon above and wait. You should see some code running by in the render window to the right. Hang tight, and if all goes well it should complete and you’ll find a pdf file with the same name in the folder of your project. Play Around You’ll notice that there are areas with plain text, and small codechunks. Any text in a codechunk with a hashtag in front will NOT be printed in the pdf document. Only the outputs of any functions you run from here. WARNING: you can’t have plain text in any chunk UNLESS it has a hashtag in front of it which basically tells R to ignore it. The chunks are meant to execute R code so only code should be here unless preceeded by the hashtag. Another important note: R IS CASE SENSITIVE. So, if you are copying my code or any code, you must copy the exact text including case. If something is called “df” you must call it with df, not Df or DF as R won’t find it. If you leave random text in these chunks, it will throw an error, and the document won’t knit. If you try to knit the document and there’s a problem, you will see an error in the render window to the right. Sometimes, it will give a clue as to where the problem is; for example, it could say that it stopped rendering around line 120. Use the line numbers to the left to find the offensive mistake! Basically, if knit fails, it is almost always because there is a problem with something you typed in a code chunk. The following code outputs a histogram of the variable speed from the cars dataframe. hist(cars$speed) Try copy and pasting it into a chunk in your document. I’ve included one for you near the top that says ### ADD SOME CODE TO ME ###. Now, run this code chunk by clicking the little green play arrow at the top of the chunk. If it worked, you should see a little histogram below the chunk. Now try knitting the document (Knit at top of the frame), and you should find the histogram in the pdf. Create your own R Markdown document Here you will find the requirements for your assignment. First, let’s create an R Markdown document so you can get started. Begin by heading to the File dropdown (top left), selecting New File and R Markdown and you’ll see the following popup: On the left you’re going to select “From Template” and then “APA-style manucript (6th edition)” Now you should see an untitled document in the main pane of Rstudio. Click on the little disk icon at top left to save this file and give it a name while you’re at it. It will automatically save the file to your project folder. "],["Intro.html", "Chapter 3 R Tutorials 3.1 Installing R and R Studio 3.2 Opening R Studio 3.3 Customizing R Studio 3.4 Install Packages 3.5 Creating your project 3.6 How to learn more?", " Chapter 3 R Tutorials 3.1 Installing R and R Studio Head to this link: R and R Studio You will first click “Install R”. From the next page, you will choose one of the top links–either R for Windows or R for macOS, depending on your laptop. Download the file, then install using the default settings if possible. If you run into problems there is plenty of help to be found on the R website and there is a great video below that can help too. Once R is installed, click the link above again, and this time go to step 2: Install R Studio. Click the link circled below for a Windows install, For a Mac install scroll down a little on the same page and you’ll see the Mac OS 12+ install: 3.2 Opening R Studio It is important to remember that R is CASE SENSITIVE. This is something you need to get used to. If you call a file df and then later refer to it as Df, R will throw an error. Open R Studio by clicking on it it’s icon and once you have your first package, you will open via the cube icon in your project folder (see below). R Studio icon NOTE: you will almost never open R itself, but always R studio. 3.3 Customizing R Studio RStudio is divided into 4 “panes”. Default colour is white with the following layout: The Source for your scripts and documents (top-left, in the default layout) Your Environment/History (top-right) which shows all the objects in your working space (Environment) and your command history (History) Your Files/Plots/Packages/Help/Viewer (bottom-right) The R Console (bottom-left) The placement of these panes and their content can be customized (see menu, Tools -&gt; Global Options -&gt; Pane Layout). For ease of use, settings such as background color, font color, font size, and zoom level can also be adjusted in this menu (Global Options -&gt; Appearance). I prefer the “modern” R studio theme (Tools –&gt; Global Options –&gt; Appearance). And my console top-right along with terminal and background jobs and Environment, History, Files, Plots, Packages etc. bottom right. One of the advantages of using RStudio is that all the information you need to write code is available in a single window. There are also shortcuts, autocompletion, and highlighting for the major file types and object you will use in RStudio. Customize R by checking this Video Tutorial out by the amazing Psychology researcher and statistics prof Andy Field. I highly recommend ALL of his stats videos as well as his textbooks–especially the ones relating to R. Here, he will walk you through customizing your workspace. Text Tutorial 3.4 Install Packages R does not like variable or object names with spaces. E.g. the name Red Group would have to be RedGroup or Red_Group or Red Group or R will throw your errors. In the console window of R, copy and paste this code into the command line then hit return: install.packages(c(&quot;tidyverse&quot;, &quot;dplyr&quot;, &quot;psych&quot;, &quot;patchwork&quot;, &quot;sjPlot&quot;, &quot;lme4&quot;, &quot;papaja&quot;)) You’ll see a bunch of code flashing by while the packages install. Hopefully it goes smoothly :) Sometimes you will have to restart R after an install, but an easy way to do this is to click on the “Session” drop-down above and then select “Restart R.” This will restart the program without actually leaving the workspace. To install an individual package, you would type: install.packages(&quot;thenameofthepackagehere&quot;) or you can search for the package in the Cran package directory found in the packages tab When the installations have finished, you can load the packages into the workspace by pasting the following code in the console: library(dplyr) library(tidyverse) library(lme4) library(psych) library(patchwork) library(sjPlot) library(papaja) but we’ll get back to packages when creating your first project. 3.5 Creating your project At the top left of your screen, click the File dropdown and select “New Project”. By default, R projects are usually stored in your documents folder. Here, you’ll click on New Directory. Next, click New Project and you’ll be prompted to select a location for your project. I find it best to leave the project subdirectory as C:/documents (or wherever your docs directory is). Then select a name for your new project. E.g. ResearchMethods_Assignment. This is where your project, your data and all of your files will live. In future, you should open Rstudio and your project from that folder where you’ll see an icon that looks like a 3-d cube. This opens your project workspace. A workspace is your current working environment in R which includes any user-defined object. By default, all of these objects will be saved, and automatically loaded, when you reopen your project. Next, it is good practice to create several subfolders for the data you will analyze. Click on the “Files” tab in the right pane (depending on where you located it). Here you should see the root folder of your project. From here, click “New Folder” and name in “Raw Data” and then create another called “Processed Data” and now you’re set. All files related to your project will be in this workspace. 3.6 How to learn more? The material we will cover in this short assignment will only give you a taste of what R is capable of. For advanced operations like cleaning your dataset, running more complex models or creating beautiful visualizations you will need to learn more. The best way to become more proficient with R, like any tool, is to actively use it to answer your research questions. I learned R from the internet out of frustration with the limitations of SPSS. There was lots of trial and error, but over time I got better and better, and had to look up code less and less. At first it may feel daunting, but you will quickly see that there are amazing resources online. FOr example, maybe you want make your wide dataset long for some multilevel analyses–how do you do this in R? Well, a simple “how to make wide dataset long in R” will conjur up thousands of useful links where you can simply copy and paste their code and then just adjust it to use with your specific data. “How do I run an ANOVA in R?” or “ANOVA tutorial in R” will find you: https://statsandr.com/blog/anova-in-r/ The great thing about these kinds of tutorials is that they include the code and often the rationalization as to why they are conducting the analyses like they are with recommendations of what steps should come first as well as how you would test any assumptions. You will learn SOOO much not just about R, but about data this way. R Markdown R Markdown Cheatsheet. https://www.rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf "],["research-assignment.html", "Chapter 4 Research Assignment", " Chapter 4 Research Assignment sdfsd https://desiree.rbind.io/blog/making-tip-boxes-with-bookdown-and-rmarkdown/ You can add parts to organize one or more book chapters together. Parts can be inserted at the top of an .Rmd file, before the first-level chapter heading in that same file. Add a numbered part: # (PART) Act one {-} (followed by # A chapter) Add an unnumbered part: # (PART\\*) Act one {-} (followed by # A chapter) Add an appendix as a special kind of un-numbered part: # (APPENDIX) Other stuff {-} (followed by # A chapter). Chapters in an appendix are prepended with letters instead of numbers. "],["troubleshooting.html", "Chapter 5 Troubleshooting 5.1 Footnotes 5.2 Citations", " Chapter 5 Troubleshooting 5.1 Footnotes Footnotes are put inside the square brackets after a caret ^[]. Like this one 1. 5.2 Citations Reference items in your bibliography file(s) using @key. For example, we are using the bookdown package (Xie 2023) (check out the last code chunk in index.Rmd to see how this citation key was added) in this sample book, which was built on top of R Markdown and knitr (Xie 2015) (this citation was added manually in an external file book.bib). Note that the .bib files need to be listed in the index.Rmd with the YAML bibliography key. The RStudio Visual Markdown Editor can also make it easier to insert citations: https://rstudio.github.io/visual-markdown-editing/#/citations References "],["handy-resources.html", "Chapter 6 Handy Resources 6.1 Useful Links 6.2 Other tips and tricks 6.3 Callout blocks", " Chapter 6 Handy Resources 6.1 Useful Links Here is an equation. \\[\\begin{equation} f\\left(k\\right) = \\binom{n}{k} p^k\\left(1-p\\right)^{n-k} \\tag{6.1} \\end{equation}\\] You may refer to using \\@ref(eq:binom), like see Equation (6.1). 6.2 Other tips and tricks Labeled theorems can be referenced in text using \\@ref(thm:tri), for example, check out this smart theorem 6.1. Theorem 6.1 For a right triangle, if \\(c\\) denotes the length of the hypotenuse and \\(a\\) and \\(b\\) denote the lengths of the other two sides, we have \\[a^2 + b^2 = c^2\\] Read more here https://bookdown.org/yihui/bookdown/markdown-extensions-by-bookdown.html. 6.3 Callout blocks The R Markdown Cookbook provides more help on how to use custom blocks to design your own callouts: https://bookdown.org/yihui/rmarkdown-cookbook/custom-blocks.html "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
