[["index.html", "PSYCH 2126: Term Assignment Chapter 1 Introduction 1.1 Goals 1.2 What can R do?", " PSYCH 2126: Term Assignment S. Heron for Dr. Emond’s Psych Class 2024-01-28 Chapter 1 Introduction This guidebook will walk you through all of the steps necessary to complete your term assignment. Get ready, because you are embarking on a journey… from the safe GUI point-and-click world of SPSS to the code-based Thunderdome of R. Where we’re going… 1.1 Goals The goal of the assignment is twofold: First, to give you the opportunity to flex what you are learning in class, and two, to introduce you R Statistical Software; a game-changer in any future research endeavors. This guide is meant as a companion to your assignment. It is not meant to be an in depth course on R, as that would be several entire courses on its own, but by the end you will have had a small taste of R and its capabilities. And who knows, it might ignite a spark of curiosity that jump starts a desire to learn more. By the end of this assignment, you will have read a bunch of interesting research papers, designed a mini study based on a theory of your choice and completed some analyses and a full write up in R that you will hand in. Your paper will include everything a person would need to reproduce your experiment from start to finish. Don’t worry about HOW we’ll do this yet, just know that you will. 1.2 What can R do? Disclaimer: I do NOT work for R. I just love it. Advanced statistical analyses without paying for packages (it’s open source!) The best data visualization capabilities of ANY statistical software Reproducible research is made easy, an integral partner of Open Science research Thousands of free online resources to learn anything you don’t know Did I say its open source.. ? Make gorgeous publication-ready papers and books with inline analyses Make gorgeous slideshows with analyses and text all in one document Make gorgeous websites (This website you’re reading is made 100% in R) Juice up your resume (researchers with R skills are a HUGE asset and hard to come by) Help you understand data better because the analysis isn’t happening behind a graphic user interface Ramp up your street cred 1000%. "],["cross.html", "Chapter 2 The Assignment 2.1 Meet Kahneman &amp; Tversky 2.2 Stage 1: Literature Review 2.3 Stage 2: Study Design 2.4 Stage 3: R Analysis &amp; Writeup 2.5 Assignment Checklist 2.6 Word Count &amp; Formatting", " Chapter 2 The Assignment 2.1 Meet Kahneman &amp; Tversky Amos Tversky (left: 1937-1996) and Daniel Kahneman (right: 1934-) transformed the field of behavioural economics in the 70s and 80s. Collaborating on groundbreaking research, they challenged traditional economic theories of “rational behaviour” by revealing the systematic biases and cognitive errors characteristic of human decision-making. The work of these two will be the focus of your research. Daniel Kahneman was awarded the Nobel Peace Prize in 2002 for his and Amos’ groundbreaking work in human decision-making. 2.2 Stage 1: Literature Review The evolution of a hypothesis Your first job is to: Find one of K&amp;T’s original research papers with Google Scholar or the Laurentian Omni library with a theory/hypothesis that you can follow from K&amp;T’s original paper through subsequent papers until today. Your aim is to find at least 9 studies that build on and test that theory. Do not choose an obscure theory that only 2 people have heard about. You won’t garner extra marks for this. For the purposes of this exercise the theory or hypothesis you choose should be well tested. So, your first study will be a Kahneman and Tversky study, next, a study that sits on the shoulders of that study, then another that progressed from that study, and so on until you find a study conducted between 2020 and today. A minimum of 10 articles should be cited. As Dr. Emond says, “Kind of like six degrees of separation but with citations”. These will make up your intro and discussion references in the final write up. The point of this exercise is to get familiar with how a theory and the questions that arise from it, change and evolve over time–not just with new evidence but with fresh perspectives of the different researchers that test them. 2.3 Stage 2: Study Design Once you have chosen one of T&amp;K’s theories, you will design an experiment to test it. Next steps: Informed by your research in Stage 1 and the experiment you would like to conduct, write a short intro/literature review, explaining the question you are exploring and referencing the articles you identified in you Stage 1. This write up will eventually be placed in the intro section of the R document you create. Some points your intro should include: Where did K&amp;T’s original hypothesis/theory come from (what previous theories informed it?) How did K&amp;T test the hypothesis/theory originally and how has the methodology been refined/evolved over time? What were the findings? Were they expected or unexpected? How did the results inform new questions? How will you test the theory in a hypothetical experiment? Remember, you’re not writing a thesis, so don’t go too crazy here (see word count recommendations in the sidebar for expected counts). Be sure to state your purpose, hypothesis and any other questions you would like to answer clearly and with justification. Make sure to operationally define your independent variable(s) and dependent variable(s). Keep in mind you should choose a research design that demonstrates your understanding of the concepts learned in class. A factorial design will blow our socks off. Describe your design, procedure and planned statistical analysis (e.g. ANOVA, t-tests, MANOVA, etc.) clearly in the Methods section. Do not forget to explain how you will control for any confounding variables. For all of the parts above, complete descriptions must be given. In full detail. Also, you must justify all of your choices. Why you decided to design it the way you did and define your variables the way you did. There are a couple of ways you can tackle this step: Do your write up in Word first, then copy and paste it into R when you’re ready. Do what I do, write directly in R. HOWEVER, because R can be intimidating and confusing at first and I don’t want you losing hours of work with a mistake, it might be smart to have a copy of your write up in Word or Google Docs, just in case! Once you get the knack of R you’ll never have to use Word as back up again. But for now, it might give you peace of mind and its very easy to copy and paste your write up directly into R. It’s what I did in the beginning and it worked like a charm. 2.4 Stage 3: R Analysis &amp; Writeup Now that you have your design nailed down, you will email the design (including the expected range/levels of your outcome variable) to Shauna (the TA). You can send this in a word document or copy and paste the design into an email. Within a couple of days you will receive some “fake” experimental data that corresponds to your design and chosen outcome. You will use this data for your “analysis” in R. Be sure to submit your design and outcome requirements to Shauna at least ONE MONTH before the final due date so you have time to troubleshoot any problems you might have with R as well as analyze &amp; write up your results and discussion. Steps to complete while waiting for your data: Install R and R Studio and customize your workspace (see R Tutorials). You do not have to wait until this step to install R. In fact I would install it near the beginning just so you have it ready to go when its time for this step. Once you have your dataset, you will start your data analyses. You’ll find a video tutorial to follow (see Analysis Tutorial that will be uploaded by February 10th) where l will walk you through how to visualize your data, conduct your analysis (ANOVA, correlations or anything else your heart desires), and finally save it all as a publication ready pdf. You will plot at least one data visualization that conveys your main results. Write a BRIEF summary of your “findings” (mini-results) in your Results section. Copy and paste your entire write-up into your R document. Remember, there needs to be an Introduction, Methods, Results and a short Discussion/Conclusion. Finally, write a very brief conclusion that wraps it all up, including at least two things you learned (or didn’t learn) during this assignment! Knit your pdf from R and hand it in via Dropbox on D2l (this step will be included in the video tutorial). If you have trouble with any part of this assignment, email me at sheron@laurentian.ca to set up a zoom or in person meeting. I’m here to help! 2.5 Assignment Checklist Make sure your final document includes: A brief introduction to the topic, explaining the theory you are exploring and referencing the article(s) it is grounded in (see Stage 1) with a clearly stated purpose and hypothesis. A Methods section that describes your sample population, design and procedure and includes clear operational definitions for your independent, control and dependent variable(s). Do not forget to explain how you will control for any confounding variables A BRIEF summary of your “findings”* in the Results section, including: a visualization of your outcome variable distribution (e.g. histogram). The descriptive statistics of your sample population (e.g. number of participants in each group, average scores in each group etc). At least one visualization that conveys your main results (e.g. your treatment effect). A brief discussion connecting your results to past research and the direction that future research could take. A one paragraph conclusion that wraps it all up. including at least two sentences that share what you learned or didn’t learn during this assignment. A cover page and reference page at the end (APA formatted). Hand in everything to D2l as a knitted pdf (see tutorial). Click this link to see the R APA manuscript template you will be filling out. What you are looking at is the pdf rendered output of the R document. 2.6 Word Count &amp; Formatting Your final document should be APA formatted with citations and a reference page. I don’t mind if you keep your visualizations inline (rather than at the back), as it makes for an easier comparison of visualizations with the results. The template you will be using to create your R document is already APA formatted, so this step should be easy for you. Your intro and discussion should contain no more than 2000 words combined–as per the max word count of most modern publications. Similarly, your methods and results should contain no more than 2000 words combined (APS, 2023)–though 1000-1500 should be more than enough for our purposes. You won’t need as much space for results as your analysis will be simpler than the average real paper. I would say your Intro, Methods, Results and Discussion (not counting the cover page and references) should be approximately 8-12 double-spaced pages. You will not be penalized for going over that; at the same time, overwriting won’t win you extra marks, either. Keep it clear and concise! "],["Intro.html", "Chapter 3 R Tutorials 3.1 Installing R and R Studio 3.2 Opening R Studio 3.3 Customizing R Studio 3.4 Create your project 3.5 Create your R Markdown Document 3.6 R Markdown basics 3.7 Learning More", " Chapter 3 R Tutorials 3.1 Installing R and R Studio Head to this link and choose the installation for R and R Studio that corresponds with your operating system (Windows or MacOS) R and R Studio You will first click “Install R”. From the next page, you will choose one of the top links–either R for Windows or R for macOS, depending on your laptop. Download the file, then install using the default settings if possible. If you run into problems there is plenty of help to be found on the R website and there is a great video below that can help too. You can also email Shauna for help (sheron@laurentian) if you run into trouble. Once R is installed, click the link above again, and this time go to step 2: Install R Studio. Click the link circled below for a Windows install, For a Mac install scroll down a little on the same page and you’ll see the Mac OS 12+ install: 3.2 Opening R Studio Open R Studio for the first time by clicking on it’s icon. R Studio icon NOTE: you will almost never open R itself, but always R Studio. Once it loads, R Studio you will see the workspace is divided into 4 “panes” or work areas. The Source for your scripts and documents (top-left, in the default layout) Your Environment/History (top-right) which shows all the objects in your working space (Environment) and your command history (History) Your Files/Plots/Packages/Help/Viewer (bottom-right) The R Console (bottom-left) Generic RStudio Setup The placement of these panes and their content can be customized (see menu, Tools -&gt; Global Options -&gt; Pane Layout). For ease of use, settings such as background color, font color, font size, and zoom level can also be adjusted in this menu (Global Options -&gt; Appearance). 3.3 Customizing R Studio This screenshot below illustrates how I have R Studio configured. To get your self set up the same, follow the Video Tutorial created by the amazing Psychology researcher and statistics prof Andy Field. I highly recommend ALL of his stats videos as well as his textbooks–especially the ones relating to R. Here, he will walk you through customizing your workspace. In my own R Studio, I chose the “modern” R studio theme (Tools –&gt; Global Options –&gt; Appearance) and have been using Andy’s layout for years now. 3.4 Create your project At the top left of your screen, click the File dropdown and select “New Project”. By default, R projects are usually stored in your documents folder. Here, you’ll click on New Directory. Next, click New Project and you’ll be prompted to select a location for your project. I find it best to leave the project subdirectory as C:/documents (or wherever your docs directory is). Then select a name for your new project. E.g. ResearchMethods_Assignment. This is where your project, your data and all of your files will live. In future, you should open Rstudio and your project from that folder where you’ll see an icon that looks like a 3-d cube. This opens your project workspace. A workspace is your current working environment in R which includes any user-defined object. By default, all of these objects will be saved, and automatically loaded, when you reopen your project. Next, it is good practice to create several subfolders for the data you will analyze. Click on the “Files” tab in the right pane (depending on where you located it). Here you should see the root folder of your project. From here, click “New Folder” and name in “Raw Data” and then create another called “Processed Data” and now you’re set. All files related to your project will be in this workspace. 3.4.1 Install Packages R is case sensitive and does not like variable or object names with spaces. E.g. the name Red Group would have to be RedGroup or Red_Group or Red Group or R will throw your errors. In the console window of R, copy and paste this code into the command line then hit return: install.packages(c(&quot;tidyverse&quot;, &quot;dplyr&quot;, &quot;psych&quot;, &quot;patchwork&quot;, &quot;sjPlot&quot;, &quot;lme4&quot;, &quot;papaja&quot;, &quot;lme4&quot;)) You’ll see a bunch of code flashing by while the packages install. Hopefully it goes smoothly :) Sometimes you will have to restart R after an install, but an easy way to do this is to click on the “Session” drop-down above and then select “Restart R.” This will restart the program without actually leaving the workspace. To install an individual package, you would type: install.packages(&quot;thenameofthepackagehere&quot;) or you can search for the package in the Cran package directory found in the packages tab When the installations have finished, you can load the packages into the workspace by pasting the following code in the console: library(dplyr) library(tidyverse) library(lme4) library(psych) library(patchwork) library(sjPlot) library(papaja) but we’ll get back to packages when creating your first project. 3.5 Create your R Markdown Document Next you will create your R Markdown document from the papaja template. With your project open, click File –&gt; New File –&gt; Markdown Document. On the left you’re going to select “From Template” and then “APA-style manucript (6th edition)” Now you should see an untitled document in the main pane of Rstudio. Click on the little disk icon at top left to save this file and give it a name while you’re at it. It will automatically save the file to the root of your project folder. 3.6 R Markdown basics The tutorial below is not fully fleshed out but will be by mid-February (I will send out an email when it’s live). Until then, work on steps 1 to 2 of your assignment and make sure you have R and R Studio installed. Also, watch Nick Fox’s tutorial below. The rest of what I’ve left below is for those who would like to start playing with R right away. Let’s get acquainted with the anatomy of an R Markdown document. There are three main components of the document: the YAML header, the formatted text (where you put your writeup) and code chunks (this is where executable code goes). Before proceeding, watch Nick Fox’s Markdown tutorial to get an idea of where we’re going. I will be adding a video tutorial here soon also (mid-February). I’m just leaving this here for those already curious :) Before you change anything in the document, let’s see how this file looks without any editing. Hit the “Knit” button at the top of R Studio (little ball of yarn), and wait. A bunch of code will flash by in the Render window. If it works, it will get through all the code without an error. You should now find a pdf file in the root of your project that looks like this: link. Just click on the file pane to the right, and a pdf will load. Click on it to open it. As you can see, it produces an APA-formatted PDF of the document you have open now. Your next steps will be to replace the pre-written text with your own. Let’s modify the document step by step: 3.6.1 The YAML Here you will add your title, your name and any other information. One caveat–the YAML area is VERY sensitive. Indents must be kept as is and any text changes MUST be contained within quotes. So, in the above example, you would replace the title Variance Heterogeneity title with your own. Ensuring that you have the title enclosed in the ” “. Replace the author’s name with your name. Add a subtitle and/or anything else you’d like. If you want to check your changes in the pdf, click the knit button then open the file from the root of your folder again. 3.6.2 Formatted Text Area 3.6.3 Code chunks You’ll notice in the document there are areas with plain text and small code chunks. The plain text will render as… well, plain text. If you look at the pdf created, you’ll see it prints Times New Roman, 12 pt font according to APA guidelines. The codechunks are the lighter grey areas that start with the three italics followed by an R inside curly brackets. Any text in a code chunk MUST be code. You can not have random text in here, as everything within it will be “executed” as a command. You can’t have plain text in any chunk UNLESS it has a hashtag in front of it which basically tells R to ignore it. Another important thing to keep in mind is R IS CASE-SENSITIVE. So, if you are copying my code or any code, you must copy the exact text, including the case. If something is called “df” you must call it with df, not Df or DF as R won’t find it and will throw you an error. # Here is an example, let&#39;s take the iris dataframe and call it df # Copy this code to a chunk in your R Markdown document # To create a new chunk, place your cursor in a text area and then hit CTRL-ALT-I df &lt;- iris # let&#39;s look at the top few rows head(df) ## Sepal.Length Sepal.Width Petal.Length Petal.Width Species ## 1 5.1 3.5 1.4 0.2 setosa ## 2 4.9 3.0 1.4 0.2 setosa ## 3 4.7 3.2 1.3 0.2 setosa ## 4 4.6 3.1 1.5 0.2 setosa ## 5 5.0 3.6 1.4 0.2 setosa ## 6 5.4 3.9 1.7 0.4 setosa # try running this code next plot(Df$Sepal.Width) # an example of R&#39;s case sensitivity Oops! You should have got an error from R. Now correct the case error and try again: # A plain histogram hist(df$Sepal.Width) # Now a prettier one using the ggpubr package # if you haven&#39;t installed it copy and paste install.package(&quot;ggpubr&quot;) in the console and hit enter library(ggpubr) gghistogram( df, x = &quot;Sepal.Width&quot;, add = &quot;mean&quot;, rug = TRUE, fill = &quot;Species&quot;, palette = c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#E7B6a6&quot;) ) If you try to knit the document and there’s a problem, you will see an error in the render window to the right. Sometimes, it will give a clue as to where the problem is; for example, it could say that it stopped rendering around line 120. Use the line numbers to the left to find the offensive mistake! Basically, if knit fails, it is almost always because there is a problem with something you typed in a code chunk. The following code outputs a histogram of the variable speed from the cars dataframe. # Notice I placed a hashtag here so that R will ignore this text # Try copy pasting this code into a code chunk in your Markdown document. hist(cars$speed) If it worked, you should see a little histogram below the chunk. Now try knitting the document (Knit button looks like a ball of yarn at top of the frame), and once rendered you should find the histogram in the pdf. 3.7 Learning More The material we will cover in this short assignment will only give you a taste of what R is capable of. For advanced operations you will need to learn more. The best way to become more proficient with R, like any tool, is to actively use it. I learned R from the internet out of frustration with the limitations of SPSS. Though there was lots of trial and error and mistakes at first, over time I got better and better, and had to look up code less and less. At first it may feel daunting, but you will quickly see that there are amazing resources online. FOr example, maybe you want make your wide dataset long for some multilevel analyses–how do you do this in R? Well, a simple “how to make wide dataset long in R” will conjur up thousands of useful links where you can simply copy and paste their code and then just adjust it to use with your specific data. “How do I run an ANOVA in R?” or “ANOVA tutorial in R” will find you: https://statsandr.com/blog/anova-in-r/ The great thing about these kinds of tutorials is that they include the code and often the rationalization as to why they are conducting the analyses like they are with recommendations of what steps should come first as well as how you would test any assumptions. You will learn SOOO much not just about R, but about data this way. R Markdown R Markdown Cheatsheet. https://www.rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf "],["analysis-tutorial.html", "Chapter 4 Analysis Tutorial", " Chapter 4 Analysis Tutorial Stay tuned! A video tutorial will appear here with the steps to completing your analyses and final pdf document soon! "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
