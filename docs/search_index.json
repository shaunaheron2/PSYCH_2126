[["Intro.html", "Chapter 3 R Tutorials 3.1 Getting Started 3.2 R Markdown", " Chapter 3 R Tutorials 3.1 Getting Started First things first: why R? The reason we want to learn R, is that it allows us to great reproducible resarch To get started, we will follow along with Andy Field’s brilliant tutorials which will walk us through: Installing R and RStudio Customizing your workspace Workflow in R Studio Loading packages and creating your first project Creating an R Markdown document R Markdown basics If you run into problems, don’t hesitate to reach out to me sheron@laurentian.ca for help. I can always meet you in person or via zoom to get you sorted. There is also loads of online help available that’s usually only a Google away. 3.1.1 Installing R &amp; R Studio To Install R and R Studio we will follow along with Andy’s “Installing R and R Studio” tutorial. The R interface can be a bit intimidating at first, stick with it though as it does become easier over time, and you’ll feel like a total wizard in the future when you start to know your way around. 3.1.2 Customizing your workspace Next we will follow a Quick Tour of R Studio to get to know our way around and customize the workspace. I have my workspace set up the same way and find it the best way. To open R Studio for the first time, click on the Windows icon and search for it or on a Mac search for R Studio in the application search bar (top right). 3.1.3 Create your project Next, we will follow along with the Working in RStudio tutorial. Don’t get too bogged down in his explanation of workflow and folder structure; however, you will create an R Studio project file for your assignment. Follow along and create your own project–this will be the folder for your assignment. At 8:24 in the video, you will follow along to create your project. Your project folder will be on your computer (rather than on OneDrive as he does in the video). The best place for this is off your documents folder. Your new project window will look something like the image below. The Directory name is whatever you’d like to call your project. Ignore the tick boxes but do go ahead and click “Open in new session”. From inside your new project, create a data folder from the file pane (follow along with Andy). No need to create an r.docs folder like he does. Create an R Markdown file (12:56 in the video) Follow along with the rest of the tutorial to get to know R Markdown. Don’t worry if everything is as clear as mud, we’ll learn more about RMarkdown soon. Move to the next step: installing packages. 3.1.4 Install Packages Next, we will follow along with the Install Packages tutorial. Install the packages he recommends. Install the following packages as well by copy and pasting the code below to your console and hitting return. install.packages(&quot;rmarkdown&quot;,&quot;papaja&quot;, &quot;psych&quot;, &quot;DataExplorer&quot;, &quot;ggplot2&quot;, &quot;sjPlot&quot;, &quot;dlookr&quot;, &quot;apaTables&quot;, &quot;gt&quot;, &quot;modelsummary&quot;) We will also install the tutorial package that I created for you, which will include an assignment template. It will make things easier to create an APA-formatted document in R Markdown. Copy and paste the following code into your console and hit enter: remotes::install_github(&quot;shaunaheron2/psych2126template&quot;) Once packages are installed, click “Session” then Restart R” (in the top menu of R Studio) to refresh your workspace. Load the packages we just installed by adding them to the library chunk of your R Markdown document. Hint: copy and paste the code below. You can also load them by adding the code to your console window. library(tidyverse) # powerful data wrangling tool library(here) library(dlookr) # powerful data exploration tool library(papaja) library(base) library(psych) library(DataExplorer) # used to explore data library(ggplot2) # powerful plotting app library(sjPlot) # this is for plotting library(psych2126template) # this is our template library(modelsummary) 3.2 R Markdown Be sure that you’ve already installed Papaja and have it loaded in your environment before working along with the tutorial. In this step Andy will walk you through the basics of R Markdown. Be sure you completed the previous steps under Getting Started. Follow along with Andy’s tutorial to get to know the basics. Now you will create an APA formatted document that contains your text write up, your data analysis and your references. You will use this document to create your reproducible scientific paper. Follow along with this video for a step-by-step walkthrough. Note: you won’t select the Papaja template as he does, instead select the AssignmentTemplate you installed and loaded above. For whatever reason, if you don’t see the AssignmentTemplate, just select the APA-style manuscript instead. Nick’s workspace looks a bit different because he is using a dark theme for his workspace. To change your theme, remember you go to Tools –&gt; Global Options –&gt; Appearance pane. From your project workspace, you’ll click File –&gt; New R Markdown and select “From Template” then “AssignmentTemplate”. Make sure you installed the packages above or you won’t see the template here. Where it says name, give your document a name–like “My Assignment” or whatever else you’d like to call it then click OK. Try clicking the Knit button to see how the template renders the R Markdown. Once the document has rendered, you’ll find a .pdf file in your project folder. If it didn’t open automatically, click on it in the file pane. Once it is open, you can make changes to the R Markdown and when you click knit you’ll see them in the pdf. Sometimes you have to click refresh in your browser to load the changes. You’ll notice I added three figures using the iris dataset that comes loaded in R: A histogram A boxplot Violin plots Follow along with Nick to learn about Papaja and to customize the template. Nick has a different file structure. He is not working from a project, but you will be if you followed Andy’s instructions above. This means your workspace already knows where the working directory is–its your project folder (which will be off your documents folder if you put it here like I suggested). Just ignore where he puts his files, but everything else is good to follow :) # install.packages(&quot;papaja&quot;) # remove the hashtag at the beginning of this line and run the code to install papaja if you haven&#39;t already (see above) library(papaja) Nick refers to his console at the bottom of the screen, if you followed Andy’s workspace setup it will be on the right side of your screen. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
