[["index.html", "PSYCH 2127: Term Assignment Chapter 1 Update: March 21, 2024 1.1 Old Updates", " PSYCH 2127: Term Assignment S. Heron for Dr. Emond’s Psych Class 2024-03-23 Chapter 1 Update: March 21, 2024 Hi class, I’ve added a new section called Lab 1 for tomorrow. I also included another template if the first one I shared isn’t working. R upgraded markdown since I shared it initially so depending on the version of R Studio you have, you could run into problems with it. There are instructions for installing a new template under the Lab 1 heading but if its too confusing, don’t fret. I’ll walk you through it on Friday. 1.1 Old Updates My LU email is back up so please send your research design to my lu address (see below) and I’ll get your data to you. I will need: Your IVs DV (outcome) as well as units of measure sample size For example, your DV might be 10 questions, each with a 5-point Likert response option or maybe your DV is a count of how many times a participant laughs. These are the things I need to know to make your data. Other than that, no formatting or citations are required. Just enough information that I know what your data would look like. shaunapsych@gmail.com Dr. Emond and I are talking on Monday about setting up a date to meet, will send out an email to everyone once I know what the options are. In the meantime, continue working on your assignment in Word. The writeup is the most time consuming part, so get that taken care of (intro, methods, etc.) first. That way the only step left is the analysis and a quick write-up of your results. Once you’ve sent your design to me, get R installed and try some of the tutorials. For those who feel comfortable foraying into R, feel free to complete the analysis and next steps yourself (once you get some data from me), and email if you run into trouble. Regardless, I will hold a lab preferrably in person but potentially over Zoom soon. Stay tuned for more details. Until then, don’t stress out! We got this. Shauna We got ’dis. "],["introduction.html", "Chapter 2 Introduction 2.1 Goals 2.2 What can R do?", " Chapter 2 Introduction This guidebook will walk you through all of the steps necessary to complete your term assignment. Get ready, because you are embarking on a journey… from the safe GUI point-and-click world of SPSS to the code-based Thunderdome of R. Where we’re going… 2.1 Goals The goal of the assignment is twofold: First, to give you the opportunity to flex what you are learning in class, and two, to introduce you R Statistical Software; a game-changer in any future research endeavors. This guide is meant as a companion to your assignment. It is not meant to be an in depth course on R, as that would be several entire courses on its own, but by the end you will have had a small taste of R and its capabilities. And who knows, it might ignite a spark of curiosity that jump starts a desire to learn more. By the end of this assignment, you will have read a bunch of interesting research papers, designed a mini study based on a theory of your choice and completed some analyses and a full write up in R that you will hand in. Your paper will include everything a person would need to reproduce your experiment from start to finish. Don’t worry about HOW we’ll do this yet, just know that you will. 2.2 What can R do? Disclaimer: I do NOT work for R. I just love it. Advanced statistical analyses without paying for packages (it’s open source!) The best data visualization capabilities of ANY statistical software Reproducible research is made easy, an integral partner of Open Science research Thousands of free online resources to learn anything you don’t know Did I say its open source.. ? Make gorgeous publication-ready papers and books with inline analyses Make gorgeous slideshows with analyses and text all in one document Make gorgeous websites (This website you’re reading is made 100% in R) Juice up your resume (researchers with R skills are a HUGE asset and hard to come by) Help you understand data better because the analysis isn’t happening behind a graphic user interface Ramp up your street cred 1000%. "],["cross.html", "Chapter 3 The Assignment 3.1 Meet Kahneman &amp; Tversky 3.2 Stage 1: Literature Review 3.3 Stage 2: Study Design 3.4 Stage 3: R Analysis &amp; Writeup 3.5 Assignment Checklist 3.6 Word Count &amp; Formatting", " Chapter 3 The Assignment 3.1 Meet Kahneman &amp; Tversky Amos Tversky (left: 1937-1996) and Daniel Kahneman (right: 1934-) transformed the field of behavioural economics in the 70s and 80s. Collaborating on groundbreaking research, they challenged traditional economic theories of “rational behaviour” by revealing the systematic biases and cognitive errors characteristic of human decision-making. The work of these two will be the focus of your research. Daniel Kahneman was awarded the Nobel Peace Prize in 2002 for his and Amos’ groundbreaking work in human decision-making. 3.2 Stage 1: Literature Review The evolution of a hypothesis Your first job is to: Find one of K&amp;T’s original research papers with Google Scholar or the Laurentian Omni library with a theory/hypothesis that you can follow from the original paper through subsequent papers until today. Your aim is to find at least 9 studies that build on and test that theory. Do not choose an obscure theory that only 2 people have heard about. You won’t garner extra marks for this. For the purposes of this exercise, the theory or hypothesis you choose should be well tested. So, your first study will be a Kahneman and Tversky study, next, a study that sits on the shoulders of that study, then another that progressed from that study, and so on until you find a study conducted between 2020 and today. A minimum of 10 articles should be cited. As Dr. Emond says, “Kind of like six degrees of separation but with citations”. These will make up your intro and discussion references in the final write-up. The point of this exercise is to get familiar with how a theory and the questions that arise from it, change and evolve over time–not just with new evidence but with fresh perspectives of the different researchers that test them. Note: Many of T&amp;K’s original research papers mention multiple theories, biases, effects and heuristics. I recommend picking only one of these in your search for more recent studies and especially when designing your own study. For example, maybe you’re interested in the representativeness heuristic. Your search terms might be “testing the representativeness heuristic experimental”. The subsequent papers you find don’t have to mention all of the effects that K&amp;T looked at. You want one. Find out how other researchers have tested the effect (e.g. what was their DV? what materials did they use to test it–a questionnaire, a quiz, etc). What have they found out so far? How could I tweak their methods slightly to make it my own? Don’t reinvent the wheel here! 3.3 Stage 2: Study Design Once you have chosen one of T&amp;K’s theories, you will design an experiment to test it. Next steps: Informed by your research in Stage 1 and the experiment you would like to conduct, write a short intro/literature review, explaining the question you are exploring and referencing the articles you identified in you Stage 1. This write-up will eventually be placed in the intro section of the R document you create. Some points your intro should include: Where did K&amp;T’s original hypothesis/theory come from (what previous theories informed it?) How did K&amp;T test the hypothesis/theory originally and how has the methodology been refined/evolved over time? What were the findings? Were they expected or unexpected? How did the results inform new questions? How will you test the theory in a hypothetical experiment? Remember, you’re not writing a thesis, so don’t go too crazy here (see word count recommendations in the sidebar for expected counts). Be sure to state your purpose, hypothesis and any other questions you would like to answer clearly and with justification. Make sure to operationally define your independent variable(s) and dependent variable(s). Keep in mind you should choose a research design that demonstrates your understanding of the concepts learned in class. A factorial design will blow our socks off. Describe your design, procedure and planned statistical analysis (e.g. ANOVA, t-tests, MANOVA, etc.) clearly in the Methods section. Do not forget to explain how you will control for any confounding variables. For all of the parts above, complete descriptions must be given. In full detail. Also, you must justify all of your choices. Why you decided to design it the way you did and define your variables the way you did. There are a couple of ways you can tackle this step: Do your write up in Word first, then copy and paste it into R when you’re ready. Do what I do, write directly in R. HOWEVER, because R can be intimidating and confusing at first and I don’t want you losing hours of work with a mistake, it might be smart to have a copy of your write up in Word or Google Docs, just in case! Once you get the knack of R you’ll never have to use Word as back up again. But for now, it might give you peace of mind and its very easy to copy and paste your write up directly into R. It’s what I did in the beginning and it worked like a charm. 3.4 Stage 3: R Analysis &amp; Writeup Now that you have your design nailed down, you will email the design (including the expected range/levels of your outcome variable) to Shauna (the TA). You can send this in a word document or copy and paste the design into an email. Within a couple of days you will receive some “fake” experimental data that corresponds to your design and chosen outcome. You will use this data for your “analysis” in R. Be sure to submit your design and outcome requirements to Shauna at least ONE MONTH before the final due date so you have time to troubleshoot any problems you might have with R as well as analyze &amp; write up your results and discussion. Steps to complete while waiting for your data: Install R and R Studio and customize your workspace (see R Tutorials). You do not have to wait until this step to install R. In fact I would install it near the beginning just so you have it ready to go when its time for this step. Once you have your dataset, you will start your data analyses. You’ll find a video tutorial to follow (see Analysis Tutorial that will be uploaded by February 10th) where l will walk you through how to visualize your data, conduct your analysis (ANOVA, correlations or anything else your heart desires), and finally save it all as a publication ready pdf. You will plot at least one data visualization that conveys your main results. Write a BRIEF summary of your “findings” (mini-results) in your Results section. Copy and paste your entire write-up into your R document. Remember, there needs to be an Introduction, Methods, Results and a short Discussion/Conclusion. Finally, write a very brief conclusion that wraps it all up, including at least two things you learned (or didn’t learn) during this assignment! Knit your pdf from R and hand it in via Dropbox on D2l (this step will be included in the video tutorial). If you have trouble with any part of this assignment, email me at sheron@laurentian.ca to set up a zoom or in person meeting. I’m here to help! 3.5 Assignment Checklist Make sure your final document includes: A brief introduction to the topic, explaining the theory you are exploring and referencing the article(s) it is grounded in (see Stage 1) with a clearly stated purpose and hypothesis. A Methods section that describes your sample population, design and procedure and includes clear operational definitions for your independent, control and dependent variable(s). Do not forget to explain how you will control for any confounding variables A BRIEF summary of your “findings”* in the Results section, including: a visualization of your outcome variable distribution (e.g. histogram). The descriptive statistics of your sample population (e.g. number of participants in each group, average scores in each group etc). At least one visualization that conveys your main results (e.g. your treatment effect). A brief discussion connecting your results to past research and the direction that future research could take. A one paragraph conclusion that wraps it all up. including at least two sentences that share what you learned or didn’t learn during this assignment. A cover page and reference page at the end (APA formatted). Hand in everything to D2l as a knitted pdf (see tutorial). Click this link to see the R APA manuscript template you will be filling out. What you are looking at is the pdf rendered output of the R document. 3.6 Word Count &amp; Formatting Your final document should be APA formatted with citations and a reference page. I don’t mind if you keep your visualizations inline (rather than at the back), as it makes for an easier comparison of visualizations with the results. The template you will be using to create your R document is already APA formatted, so this step should be easy for you. Your intro and discussion should contain no more than 2000 words combined–as per the max word count of most modern publications. Similarly, your methods and results should contain no more than 2000 words combined (APS, 2023)–though 1000-1500 should be more than enough for our purposes. You won’t need as much space for results as your analysis will be simpler than the average real paper. I would say your Intro, Methods, Results and Discussion (not counting the cover page and references) should be approximately 8-12 double-spaced pages. You will not be penalized for going over that; at the same time, overwriting won’t win you extra marks, either. Keep it clear and concise! "],["Intro.html", "Chapter 4 R Tutorials 4.1 Getting Started 4.2 R Markdown", " Chapter 4 R Tutorials 4.1 Getting Started First things first: why R? The reason we want to learn R, is that it allows us to great reproducible research To get started, we will follow along with Andy Field’s brilliant tutorials which will walk us through: Installing R and RStudio Customizing your workspace Workflow in R Studio Loading packages and creating your first project Creating an R Markdown document R Markdown basics If you run into problems, don’t hesitate to reach out to me sheron@laurentian.ca for help. I can always meet you in person or via zoom to get you sorted. There is also loads of online help available that’s usually only a Google away. 4.1.1 Installing R &amp; R Studio To Install R and R Studio we will follow along with Andy’s “Installing R and R Studio” tutorial. The R interface can be a bit intimidating at first, stick with it though as it does become easier over time, and you’ll feel like a total wizard in the future when you start to know your way around. 4.1.2 Customizing your workspace Next we will follow a Quick Tour of R Studio to get to know our way around and customize the workspace. I have my workspace set up the same way and find it the best way. To open R Studio for the first time, click on the Windows icon and search for it or on a Mac search for R Studio in the application search bar (top right). 4.1.3 Create your project Next, we will follow along with the Working in RStudio tutorial. Don’t get too bogged down in his explanation of workflow and folder structure; however, you will create an R Studio project file for your assignment. Follow along and create your own project–this will be the folder for your assignment. At 8:24 in the video, you will follow along to create your project. Your project folder will be on your computer (rather than on OneDrive as he does in the video). The best place for this is off your documents folder. Your new project window will look something like the image below. The Directory name is whatever you’d like to call your project. Ignore the tick boxes but do go ahead and click “Open in new session”. From inside your new project, create a data folder from the file pane (follow along with Andy). No need to create an r.docs folder like he does. Create an R Markdown file (12:56 in the video) Follow along with the rest of the tutorial to get to know R Markdown. Don’t worry if everything is as clear as mud, we’ll learn more about RMarkdown soon. Move to the next step: installing packages. 4.1.4 Install Packages Next, we will follow along with the Install Packages tutorial. Install the packages he recommends. Install the following packages as well by copy and pasting the code below to your console and hitting return. install.packages(&quot;rmarkdown&quot;,&quot;papaja&quot;, &quot;psych&quot;, &quot;DataExplorer&quot;, &quot;ggplot2&quot;, &quot;sjPlot&quot;, &quot;dlookr&quot;, &quot;apaTables&quot;, &quot;gt&quot;, &quot;modelsummary&quot;) We will also install the tutorial package that I created for you, which will include an assignment template. It will make things easier to create an APA-formatted document in R Markdown. Copy and paste the following code into your console and hit enter: remotes::install_github(&quot;shaunaheron2/psych2126template&quot;) Once packages are installed, click “Session” then Restart R” (in the top menu of R Studio) to refresh your workspace. Load the packages we just installed by adding them to the library chunk of your R Markdown document. Hint: copy and paste the code below. You can also load them by adding the code to your console window. library(tidyverse) # powerful data wrangling tool library(here) library(dlookr) # powerful data exploration tool library(papaja) library(base) library(psych) library(DataExplorer) # used to explore data library(ggplot2) # powerful plotting app library(sjPlot) # this is for plotting library(psych2126template) # this is our template library(modelsummary) 4.2 R Markdown Be sure that you’ve already installed Papaja and have it loaded in your environment before working along with the tutorial. In this step Andy will walk you through the basics of R Markdown. Be sure you completed the previous steps under Getting Started. Follow along with Andy’s tutorial to get to know the basics. Now you will create an APA formatted document that contains your text write up, your data analysis and your references. You will use this document to create your reproducible scientific paper. Follow along with this video for a step-by-step walkthrough. Note: you won’t select the Papaja template as he does, instead select the AssignmentTemplate you installed and loaded above. For whatever reason, if you don’t see the AssignmentTemplate, just select the APA-style manuscript instead. Nick’s workspace looks a bit different because he is using a dark theme for his workspace. To change your theme, remember you go to Tools –&gt; Global Options –&gt; Appearance pane. From your project workspace, you’ll click File –&gt; New R Markdown and select “From Template” then “AssignmentTemplate”. Make sure you installed the packages above or you won’t see the template here. Where it says name, give your document a name–like “My Assignment” or whatever else you’d like to call it then click OK. Try clicking the Knit button to see how the template renders the R Markdown. Once the document has rendered, you’ll find a .pdf file in your project folder. If it didn’t open automatically, click on it in the file pane. Once it is open, you can make changes to the R Markdown and when you click knit you’ll see them in the pdf. Sometimes you have to click refresh in your browser to load the changes. You’ll notice I added three figures using the iris dataset that comes loaded in R: A histogram A boxplot Violin plots Follow along with Nick to learn about Papaja and to customize the template. Nick refers to his console at the bottom of the screen, if you followed Andy’s workspace setup it will be on the right side of your screen. "],["data-analysis-in-r.html", "Chapter 5 Data Analysis in R 5.1 Describing Data 5.2 Statistical Tests", " Chapter 5 Data Analysis in R While you’re waiting to for your data from Shauna (remember to send you experiment design to Shauna so that she can create some data for you), lets practice basic data analysis in R with some pre-loaded datasets. If you find this part overwhelming, I can walk you through the steps in the upcoming lab I will hold mid-March. I’d like it if you tried some of these exercises, however, so you have at least some experience poking around R. Also: the tutorials that follow aren’t meant to teach you statistics, you have Dr. Emond and probably a textbook for that. Instead, I will teach you how to conduct the analyses you’ve learned about in R rather than SPSS. Refer to your textbook or other online resources for the underlying theory. I recommend following along with the tutorial in a basic R markdown document. See the R Markdown section if you don’t remember how to start a new document. Hint, File –&gt; New File –&gt; R Markdown –&gt; Click Okay then Save via the little disk icon above. Name it something like Practice 1. To follow along with the tutorial you can copy and paste the code found below into the codechunk sof your practice Markdown document. Feel free to play around, rename variables and explore. Making mistakes is the best way to learn. 5.1 Describing Data The Dirty Data Theorem states that “real world” data tends to come from bizarre and unspecifiable distributions of highly correlated variables and have unequal sample sizes, missing data points, non-independent observations, and an indeterminate number of inaccurately recorded values. — Unknown, Statistically Speaking, p. 282. The first step before analyzing any new dataset is to describe and visualize it. Packages you’ll need: library(ggpubr) library(ggstatsplot) library(DataExplorer) library(lme4) You will use the commands in this section to add a summary table and histogram of your outcome variable to your final document. I will list each step needed to add a histogram to your final paper in the “Putting it all Together” tutorial at the very end. First, lets practice. Let’s start by loading the iris data frame and storing it in an object we’ll call df. df &lt;- data.frame(iris) # load the iris dataframe into an object Let’s imagine we got this data by measuring the petals and stamens of 4 species of flowers behind our house. We’re hoping we can learn something about the relationship between the species and petal/stamen size. Let’s take a look at the data: # let&#39;s call the object we just created df ## Sepal.Length Sepal.Width Petal.Length Petal.Width Species ## 1 5.1 3.5 1.4 0.2 setosa ## 2 4.9 3.0 1.4 0.2 setosa ## 3 4.7 3.2 1.3 0.2 setosa ## 4 4.6 3.1 1.5 0.2 setosa ## 5 5.0 3.6 1.4 0.2 setosa ## 6 5.4 3.9 1.7 0.4 setosa ## 7 4.6 3.4 1.4 0.3 setosa ## 8 5.0 3.4 1.5 0.2 setosa ## 9 4.4 2.9 1.4 0.2 setosa ## 10 4.9 3.1 1.5 0.1 setosa ## 11 5.4 3.7 1.5 0.2 setosa ## 12 4.8 3.4 1.6 0.2 setosa ## 13 4.8 3.0 1.4 0.1 setosa ## 14 4.3 3.0 1.1 0.1 setosa ## 15 5.8 4.0 1.2 0.2 setosa ## 16 5.7 4.4 1.5 0.4 setosa ## 17 5.4 3.9 1.3 0.4 setosa ## 18 5.1 3.5 1.4 0.3 setosa ## 19 5.7 3.8 1.7 0.3 setosa ## 20 5.1 3.8 1.5 0.3 setosa ## 21 5.4 3.4 1.7 0.2 setosa ## 22 5.1 3.7 1.5 0.4 setosa ## 23 4.6 3.6 1.0 0.2 setosa ## 24 5.1 3.3 1.7 0.5 setosa ## 25 4.8 3.4 1.9 0.2 setosa ## 26 5.0 3.0 1.6 0.2 setosa ## 27 5.0 3.4 1.6 0.4 setosa ## 28 5.2 3.5 1.5 0.2 setosa ## 29 5.2 3.4 1.4 0.2 setosa ## 30 4.7 3.2 1.6 0.2 setosa ## 31 4.8 3.1 1.6 0.2 setosa ## 32 5.4 3.4 1.5 0.4 setosa ## 33 5.2 4.1 1.5 0.1 setosa ## 34 5.5 4.2 1.4 0.2 setosa ## 35 4.9 3.1 1.5 0.2 setosa ## 36 5.0 3.2 1.2 0.2 setosa ## 37 5.5 3.5 1.3 0.2 setosa ## 38 4.9 3.6 1.4 0.1 setosa ## 39 4.4 3.0 1.3 0.2 setosa ## 40 5.1 3.4 1.5 0.2 setosa ## 41 5.0 3.5 1.3 0.3 setosa ## 42 4.5 2.3 1.3 0.3 setosa ## 43 4.4 3.2 1.3 0.2 setosa ## 44 5.0 3.5 1.6 0.6 setosa ## 45 5.1 3.8 1.9 0.4 setosa ## 46 4.8 3.0 1.4 0.3 setosa ## 47 5.1 3.8 1.6 0.2 setosa ## 48 4.6 3.2 1.4 0.2 setosa ## 49 5.3 3.7 1.5 0.2 setosa ## 50 5.0 3.3 1.4 0.2 setosa ## 51 7.0 3.2 4.7 1.4 versicolor ## 52 6.4 3.2 4.5 1.5 versicolor ## 53 6.9 3.1 4.9 1.5 versicolor ## 54 5.5 2.3 4.0 1.3 versicolor ## 55 6.5 2.8 4.6 1.5 versicolor ## 56 5.7 2.8 4.5 1.3 versicolor ## 57 6.3 3.3 4.7 1.6 versicolor ## 58 4.9 2.4 3.3 1.0 versicolor ## 59 6.6 2.9 4.6 1.3 versicolor ## 60 5.2 2.7 3.9 1.4 versicolor ## 61 5.0 2.0 3.5 1.0 versicolor ## 62 5.9 3.0 4.2 1.5 versicolor ## 63 6.0 2.2 4.0 1.0 versicolor ## 64 6.1 2.9 4.7 1.4 versicolor ## 65 5.6 2.9 3.6 1.3 versicolor ## 66 6.7 3.1 4.4 1.4 versicolor ## 67 5.6 3.0 4.5 1.5 versicolor ## 68 5.8 2.7 4.1 1.0 versicolor ## 69 6.2 2.2 4.5 1.5 versicolor ## 70 5.6 2.5 3.9 1.1 versicolor ## 71 5.9 3.2 4.8 1.8 versicolor ## 72 6.1 2.8 4.0 1.3 versicolor ## 73 6.3 2.5 4.9 1.5 versicolor ## 74 6.1 2.8 4.7 1.2 versicolor ## 75 6.4 2.9 4.3 1.3 versicolor ## 76 6.6 3.0 4.4 1.4 versicolor ## 77 6.8 2.8 4.8 1.4 versicolor ## 78 6.7 3.0 5.0 1.7 versicolor ## 79 6.0 2.9 4.5 1.5 versicolor ## 80 5.7 2.6 3.5 1.0 versicolor ## 81 5.5 2.4 3.8 1.1 versicolor ## 82 5.5 2.4 3.7 1.0 versicolor ## 83 5.8 2.7 3.9 1.2 versicolor ## 84 6.0 2.7 5.1 1.6 versicolor ## 85 5.4 3.0 4.5 1.5 versicolor ## 86 6.0 3.4 4.5 1.6 versicolor ## 87 6.7 3.1 4.7 1.5 versicolor ## 88 6.3 2.3 4.4 1.3 versicolor ## 89 5.6 3.0 4.1 1.3 versicolor ## 90 5.5 2.5 4.0 1.3 versicolor ## 91 5.5 2.6 4.4 1.2 versicolor ## 92 6.1 3.0 4.6 1.4 versicolor ## 93 5.8 2.6 4.0 1.2 versicolor ## 94 5.0 2.3 3.3 1.0 versicolor ## 95 5.6 2.7 4.2 1.3 versicolor ## 96 5.7 3.0 4.2 1.2 versicolor ## 97 5.7 2.9 4.2 1.3 versicolor ## 98 6.2 2.9 4.3 1.3 versicolor ## 99 5.1 2.5 3.0 1.1 versicolor ## 100 5.7 2.8 4.1 1.3 versicolor ## 101 6.3 3.3 6.0 2.5 virginica ## 102 5.8 2.7 5.1 1.9 virginica ## 103 7.1 3.0 5.9 2.1 virginica ## 104 6.3 2.9 5.6 1.8 virginica ## 105 6.5 3.0 5.8 2.2 virginica ## 106 7.6 3.0 6.6 2.1 virginica ## 107 4.9 2.5 4.5 1.7 virginica ## 108 7.3 2.9 6.3 1.8 virginica ## 109 6.7 2.5 5.8 1.8 virginica ## 110 7.2 3.6 6.1 2.5 virginica ## 111 6.5 3.2 5.1 2.0 virginica ## 112 6.4 2.7 5.3 1.9 virginica ## 113 6.8 3.0 5.5 2.1 virginica ## 114 5.7 2.5 5.0 2.0 virginica ## 115 5.8 2.8 5.1 2.4 virginica ## 116 6.4 3.2 5.3 2.3 virginica ## 117 6.5 3.0 5.5 1.8 virginica ## 118 7.7 3.8 6.7 2.2 virginica ## 119 7.7 2.6 6.9 2.3 virginica ## 120 6.0 2.2 5.0 1.5 virginica ## 121 6.9 3.2 5.7 2.3 virginica ## 122 5.6 2.8 4.9 2.0 virginica ## 123 7.7 2.8 6.7 2.0 virginica ## 124 6.3 2.7 4.9 1.8 virginica ## 125 6.7 3.3 5.7 2.1 virginica ## 126 7.2 3.2 6.0 1.8 virginica ## 127 6.2 2.8 4.8 1.8 virginica ## 128 6.1 3.0 4.9 1.8 virginica ## 129 6.4 2.8 5.6 2.1 virginica ## 130 7.2 3.0 5.8 1.6 virginica ## 131 7.4 2.8 6.1 1.9 virginica ## 132 7.9 3.8 6.4 2.0 virginica ## 133 6.4 2.8 5.6 2.2 virginica ## 134 6.3 2.8 5.1 1.5 virginica ## 135 6.1 2.6 5.6 1.4 virginica ## 136 7.7 3.0 6.1 2.3 virginica ## 137 6.3 3.4 5.6 2.4 virginica ## 138 6.4 3.1 5.5 1.8 virginica ## 139 6.0 3.0 4.8 1.8 virginica ## 140 6.9 3.1 5.4 2.1 virginica ## 141 6.7 3.1 5.6 2.4 virginica ## 142 6.9 3.1 5.1 2.3 virginica ## 143 5.8 2.7 5.1 1.9 virginica ## 144 6.8 3.2 5.9 2.3 virginica ## 145 6.7 3.3 5.7 2.5 virginica ## 146 6.7 3.0 5.2 2.3 virginica ## 147 6.3 2.5 5.0 1.9 virginica ## 148 6.5 3.0 5.2 2.0 virginica ## 149 6.2 3.4 5.4 2.3 virginica ## 150 5.9 3.0 5.1 1.8 virginica Woah, kinda messy. Do these strings of numbers tell us anything about the flowers we just measured? Not really. What we need to do is describe the data. There are a variety of statistics you might want to calculate here. Means, medians, ranges, quartiles, standard deviations, skewness, etc. There are too many of these functions to cover in this tutorial, so let’s discuss the most common statistics that you will need to report. mean() calculates the arithmetic mean. median() calculates the median; min() and max() are the minimum and maximum; sd() calculates the standard deviation (and var() computes the variance) psych::skew() and psych::kurtosi() compute skewness and kurtosis respectively Instead of using these commands individually, the describe command from the Psych package will allow us to see the mean, standard deviation, range and skewness of our data all at once. descriptives &lt;- psych::describe(df) # create an object to hold the output of the describe function descriptives # this calls the object we just made ## vars n mean sd median trimmed mad min max range skew ## Sepal.Length 1 150 5.84 0.83 5.80 5.81 1.04 4.3 7.9 3.6 0.31 ## Sepal.Width 2 150 3.06 0.44 3.00 3.04 0.44 2.0 4.4 2.4 0.31 ## Petal.Length 3 150 3.76 1.77 4.35 3.76 1.85 1.0 6.9 5.9 -0.27 ## Petal.Width 4 150 1.20 0.76 1.30 1.18 1.04 0.1 2.5 2.4 -0.10 ## Species* 5 150 2.00 0.82 2.00 2.00 1.48 1.0 3.0 2.0 0.00 ## kurtosis se ## Sepal.Length -0.61 0.07 ## Sepal.Width 0.14 0.04 ## Petal.Length -1.42 0.14 ## Petal.Width -1.36 0.06 ## Species* -1.52 0.07 From the output you can see our df contains 5 variables: 4 sepal measurements that are continuous and a species variable that seems to be a categorical variable (note the asterix denoting its a nominal variable) with 3 levels If we wanted to calculate the mean of just one variable, let’s say Sepal Width we would call the specific variable. 5.1.0.1 Calling single variables In R, a variable name is composed of two parts: The prefix (which tells R what dataframe the variable is in) - df in our case The variable name (the exact name the variable has in our df) - Sepal.Length in our case. If you forget the names of the variables in the dataframe you can always quickly use the names command for a list of all variables. names(df) ## [1] &quot;Sepal.Length&quot; &quot;Sepal.Width&quot; &quot;Petal.Length&quot; &quot;Petal.Width&quot; &quot;Species&quot; To call an individual variable we need to tell R where to find it. The three parts are: df (the address dataframe) $ (a connector that tells us R that we want the specific variable name that follows) Sepal.Length (the name of our variable) Lets put it all together: df$Sepal.Length These are the individual commands for mean, median and standard deviation. mean(df$Sepal.Width) # calculate the mean of sepal width in the df dataframe ## [1] 3.057333 median(df$Sepal.Width) # calculate the median of sepal width ## [1] 3 sd(df$Sepal.Width) # calculate the standard deviation of sepal width ## [1] 0.4358663 In the Environment pane of your workspace (to the right), you will see the objects you create. You can click on them or hover over them here to open them or obtain more information about them. Its especially handy to view large datasets as it will open a sortable version of the df in a new tab in the workspace. 5.1.1 Descriptive Table For a prettier descriptive table of all the continuous variables in your df including little histograms: library(modelsummary) summary &lt;- datasummary_skim(df) # a function that shows some descriptives of the numerical data in your df summary # now call the object Unique (#) Missing (%) Mean SD Min Median Max Sepal.Length 35 0 5.8 0.8 4.3 5.8 7.9 .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle { fill: none; stroke: #000000; stroke-linecap: round; stroke-linejoin: round; stroke-miterlimit: 10.00; } .svglite text { white-space: pre; } Sepal.Width 23 0 3.1 0.4 2.0 3.0 4.4 .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle { fill: none; stroke: #000000; stroke-linecap: round; stroke-linejoin: round; stroke-miterlimit: 10.00; } .svglite text { white-space: pre; } Petal.Length 43 0 3.8 1.8 1.0 4.3 6.9 .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle { fill: none; stroke: #000000; stroke-linecap: round; stroke-linejoin: round; stroke-miterlimit: 10.00; } .svglite text { white-space: pre; } Petal.Width 22 0 1.2 0.8 0.1 1.3 2.5 .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle { fill: none; stroke: #000000; stroke-linecap: round; stroke-linejoin: round; stroke-miterlimit: 10.00; } .svglite text { white-space: pre; } To summarise the categorical variable in our dataset we can add the type = “categorical” function to our original command. datasummary_skim(df, type = &quot;categorical&quot;) # same command, but here we look at the frequencies of our categorical variable Species Species N % setosa 50 33.3 versicolor 50 33.3 virginica 50 33.3 Cute! We see that 3 species of flowers were sampled. 50 measurements were conducted on each flower giving us a total sample size of 150. This matches the count we saw in our descriptives table. To put it all in one table we could try this: # this command says we want the datasummary function to compute the mean and sd for # all continuous variables in the df dataframe by species datasummary(Species * (All(df)) ~ Mean + SD, data=df, output=&#39;markdown&#39;) Species Mean SD setosa Sepal.Length 5.01 0.35 Sepal.Width 3.43 0.38 Petal.Length 1.46 0.17 Petal.Width 0.25 0.11 versicolor Sepal.Length 5.94 0.52 Sepal.Width 2.77 0.31 Petal.Length 4.26 0.47 Petal.Width 1.33 0.20 virginica Sepal.Length 6.59 0.64 Sepal.Width 2.97 0.32 Petal.Length 5.55 0.55 Petal.Width 2.03 0.27 Now we can see the overall means of each continuous variable across species What if we want to see the distribution of each measure between species? 5.1.2 Histograms The next step after computing some descriptive statistics, is to visualize our data. To see a histogram of all the continuous variables in the dataframe use the plot_histogram function from the DataExplorer package. Histograms are a great way to check your outcome variable for normality. Remember, most statistical tests have a set of assumptions that if violated, make the results of the tests unreliable. plot_histogram(df) The histograms tell us a few things: Petal length &amp; Petal width measurements do NOT follow a normal distribution. They look bimodal, meaning there are two distributions in one. Some petals are really short and some are medium to long with a gap in between. We would have trouble modeling this if it were our outcome variable–lucky for us its not! Our outcome variable (sepal length and width) seems relatively normal. # To create a histogram of sepal length we call the function hist hist(df$Sepal.Length) Lovely! Similarly, we could look at sepal width: hist(df$Sepal.Width) Here’s a fancier grouped histogram. It allows us to see the distribution of sepal length across the species factor. This allows us to see where sepal length overlaps and where it does not. From the grouped histogram we can see that the flower with shortest sepals are Setosa flowers while the longest sepals belong to the Versicolor species. p &lt;- df %&gt;% ggplot( aes(x=Sepal.Length, fill=Species)) + geom_histogram(color=&quot;#e9ecef&quot;, alpha=0.6, position = &#39;identity&#39;) + labs(fill=&quot;&quot;) p ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. You will add a histogram of your outcome variable to your final document. You’ll use the data I give you (based on your research design) instead of the iris dataset. Remember: R is case sensitive, so if you dont type the names of variables and objects exactly as they appear in your dataframe, R will scream at you! 5.1.3 Correlations We might also look at correlations to see if there are underlying relationships we need to consider: plot_correlation(df, maxcat = 5L) # let&#39;s build a correlation matrix On quick glance, we can see that sepal length is positively correlated with the Species Virginca (r = .64), meaning that long sepal lengths are more likely in Virginica flowers than Setosa, where sepal length is negatively correlated which suggests a shorter sepal length. This concurs with the histograms we just looked at. There is a lot more interesting stuff in the correlation matrix, but to avoid confusion let’s move on. Just know that you can build these matrices in R if you ever need one in future. 5.1.4 Boxplots Before we run an Anova or a linear regression, let’s visualize the empirical differences between groups. For this data, a boxplot is our best bet. We’ll use the ggplot package. library(ggthemes) p &lt;- df %&gt;% # we call our dataframe and tell it to put the output in an object called p group_by(Species)%&gt;% # we want to group our data by our categorical variable ggplot(aes(x=Species, y=Sepal.Length))+ # here we tell ggplot what we want on our x and y axis geom_boxplot(stat=&quot;boxplot&quot;) # here we tell is that we want a boxplot p # now we call the object we just made Figure 5.1: My pretty boxplot Let’s make it more colourful p + geom_boxplot(stat=&quot;boxplot&quot;, aes(fill=Species))+ # here we modify the code a little to make the plot colourful scale_fill_manual(values = c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;)) # here we add our colous with RGB codes Figure 5.2: My prettier boxplot What about a title and a proper name for the y axis? p + geom_boxplot(stat=&quot;boxplot&quot;, aes(fill=Species))+ scale_fill_manual(values = c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;)) + ylab(&quot;Sepal Length (cms)&quot;)+ # here we add a label to the y axis ggtitle(&quot;Sepal length by species&quot;) # here we add a title Figure 5.3: The prettiest boxplot ever made Almost there–now let’s format it APA style p + geom_boxplot(stat=&quot;boxplot&quot;, aes(fill=Species))+ scale_fill_manual(values = c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;)) + ylab(&quot;Sepal Length (cms)&quot;)+ # here we add a label to the y axis ggtitle(&quot;Sepal length by species&quot;)+ # here we add a title theme_classic() # this changes the theme (notice the grey background is gone) Figure 5.4: The prettiest boxplot in the world Obviously there is so much more we can do here, but let’s keep it simple for now. 5.2 Statistical Tests 5.2.1 T-Tests # To run a t-test, our grouping variable can only have two levels, while Species has 4, so we;re just going to look at the difference between two levels df2 &lt;- df %&gt;% filter(Species==&quot;setosa&quot;|Species==&quot;versicolor&quot;) %&gt;% droplevels() results &lt;- t.test(Sepal.Length ~ Species, data = df2) results ## ## Welch Two Sample t-test ## ## data: Sepal.Length by Species ## t = -10.521, df = 86.538, p-value &lt; 2.2e-16 ## alternative hypothesis: true difference in means between group setosa and group versicolor is not equal to 0 ## 95 percent confidence interval: ## -1.1057074 -0.7542926 ## sample estimates: ## mean in group setosa mean in group versicolor ## 5.006 5.936 5.2.2 One-Way ANOVA Assumptions The ANOVA test makes the following assumptions about the data: Independence of the observations. Each subject should belong to only one group. There is no relationship between the observations in each group. Having repeated measures for the same participants is not allowed. No significant outliers in any cell of the design Normality. the data for each design cell should be approximately normally distributed. Homogeneity of variances. The variance of the outcome variable should be equal in every cell of the design. Before computing ANOVA test, you need to perform some preliminary tests to check if the assumptions are met. I will be giving you nice, normally distributed data for this assignment, so you will not have to worry about these tests. However, you will have to conduct these tests for a real research project, like your thesis. Note that, if the above assumptions are not met there are a non-parametric alternative (Kruskal-Wallis test) to the one-way ANOVA. It’s also possible to perform robust ANOVA test using the WRS2 R package. No matter your choice, you should report what you did in your results. Load required packages: Your first steps would be to calculate the mean and standard deviation generally and within each group, but we did that above. Next I’ll walk you through how to test assumptions–though in your current assignment you don’t have to worry about this. library(tidyverse) library(ggpubr) library(rstatix) 5.2.2.1 Outliers df %&gt;% group_by(Species)%&gt;% identify_outliers(Sepal.Width) ## # A tibble: 5 × 7 ## Species Sepal.Length Sepal.Width Petal.Length Petal.Width is.outlier ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;lgl&gt; ## 1 setosa 5.7 4.4 1.5 0.4 TRUE ## 2 setosa 4.5 2.3 1.3 0.3 TRUE ## 3 virginica 7.7 3.8 6.7 2.2 TRUE ## 4 virginica 6 2.2 5 1.5 TRUE ## 5 virginica 7.9 3.8 6.4 2 TRUE ## # ℹ 1 more variable: is.extreme &lt;lgl&gt; We do have some outliers, so we’ll conduct a robust ANOVA (rather than removing the outliers which is often frowned upon). The normality assumption can be checked by using one of the following two approaches: Analyzing the ANOVA model residuals to check the normality for all groups together. This approach is easier and it’s very handy when you have many groups or if there are few data points per group. Check normality for each group separately. This approach might be used when you have only a few groups and many data points per group. 5.2.2.2 Check normality The following is how you would check the normality assumption by analyzing model residuals (the difference between what the model predicts and what the actual data show). Remember, this isn’t necessary for your assignment but would be necessary for any real experiment you conduct so I’ll just walk you through anyway. This won’t be on your final exam :) QQ plot and Shapiro-Wilk test of normality are used. QQ plot draws the correlation between a given data and the normal distribution. # Build the linear model model &lt;- lm(Sepal.Length ~ Species, data = df) # Create a QQ plot of residuals ggqqplot(residuals(model)) # Compute Shapiro-Wilk test of normality shapiro_test(residuals(model)) ## # A tibble: 1 × 3 ## variable statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 residuals(model) 0.988 0.219 In the QQ plot, as all the points fall approximately along the reference line, we can assume normality. This conclusion is supported by the Shapiro-Wilk test. The p-value is not significant (p = 0.13), so we can assume normality. Check normality assumption by groups. Computing Shapiro-Wilk test for each group level. If the data is normally distributed, the p-value should be greater than 0.05. ggqqplot(df, &quot;Sepal.Length&quot;, facet.by = &quot;Species&quot;) # All the points fall approximately along the reference line, for each cell. So we can assume normality of the data. 5.2.2.3 Homogneity of variance assumption We’ll use a levene’s test df %&gt;% levene_test(Sepal.Length ~ Species) ## # A tibble: 1 × 4 ## df1 df2 statistic p ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 2 147 6.35 0.00226 Unfortunately, we have a p value &lt; .05 so we have a significant difference in variance between groups. In a situation where the homogeneity of variance assumption is not met, you can compute the Welch one-way ANOVA test using the function welch_anova_test()[rstatix package]. This test does not require the assumption of equal variances. 5.2.2.4 Run the anova res.aov &lt;- df %&gt;% anova_test(Sepal.Length ~ Species) res.aov ## ANOVA Table (type II tests) ## ## Effect DFn DFd F p p&lt;.05 ges ## 1 Species 2 147 119.265 1.67e-31 * 0.619 5.2.2.5 Post Hoc Tests # Pairwise comparisons pwc &lt;- df %&gt;% tukey_hsd(Sepal.Length ~ Species) pwc ## # A tibble: 3 × 9 ## term group1 group2 null.value estimate conf.low conf.high p.adj ## * &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Species setosa versicolor 0 0.93 0.686 1.17 3.39e-14 ## 2 Species setosa virginica 0 1.58 1.34 1.83 3 e-15 ## 3 Species versicolor virginica 0 0.652 0.408 0.896 8.29e- 9 ## # ℹ 1 more variable: p.adj.signif &lt;chr&gt; The output contains the following columns: estimate: estimate of the difference between means of the two groups conf.low, conf.high: the lower and the upper end point of the confidence interval at 95% (default) p.adj: p-value after adjustment for the multiple comparisons. 5.2.2.6 Reporting the results We could report the results of one-way ANOVA as follows: A one-way ANOVA was performed to evaluate if sepal length was different across the 3 different species: Setosa (n = 50), Versicolor (n = 50) and Verginica (n = 50). Sepal length was significantly different between species, F(2, 147) = 119.27, p&lt;.001, eta squared = .62. 5.2.2.7 Visualize Results # Visualization: box plots with p-values pwc &lt;- pwc %&gt;% add_xy_position(x = &quot;Species&quot;) ggboxplot(df, x = &quot;Species&quot;, y = &quot;Sepal.Length&quot;) + stat_pvalue_manual(pwc, hide.ns = TRUE) + labs( subtitle = get_test_label(res.aov, detailed = TRUE), caption = get_pwc_label(pwc) ) Remember our violation of homogeneity of variance? Let’s try the Welch’s one way test which is the alternative to the one-way ANOVA when variances are not equal. # Welch One way ANOVA test res.aov2 &lt;- df %&gt;% welch_anova_test(Sepal.Length ~ Species) # Pairwise comparisons (Games-Howell) pwc2 &lt;- df %&gt;% games_howell_test(Sepal.Length ~ Species) res.aov2 ## # A tibble: 1 × 7 ## .y. n statistic DFn DFd p method ## * &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 Sepal.Length 150 139. 2 92.2 1.51e-28 Welch ANOVA 5.2.3 Two-Way ANOVA A two-way ANOVA is used to evaluate simultaneously the effect of two different grouping variables on a continuous outcome variable. Other synonyms are: two factorial design, factorial anova or two-way between-subjects ANOVA. We’ll use the build in ToothGrowth data frame to look at the Effect of Vitamin C on Tooth Growth in Guinea Pigs. # Let&#39;s grab the toothgrowth data and put it in an object called &quot;df&quot; (dataframe) df &lt;- ToothGrowth df$dose &lt;- as.factor(df$dose) What does the data look like? Let’s just look at the first few rows: head(df) ## len supp dose ## 1 4.2 VC 0.5 ## 2 11.5 VC 0.5 ## 3 7.3 VC 0.5 ## 4 5.8 VC 0.5 ## 5 6.4 VC 0.5 ## 6 10.0 VC 0.5 We can see a length variable (len) which is the outcome, a supplement variable (whether they received Vitamin C or Orange Juice) and the dose given (.5, 1, or 2). We have 2 IVs (dose and vitamin C or OJ) and one DV, toothlength (len). Let’s compute some quick descriptive statistics: df %&gt;% # our dataframe and pipe command which tells R that everything that follows should be run on the df dataframe group_by(supp, dose) %&gt;% # we want the stats computed in each group get_summary_stats(len, type = &quot;mean_sd&quot;) # we want the mean and sd of toothlength in each group ## # A tibble: 6 × 6 ## supp dose variable n mean sd ## &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 OJ 0.5 len 10 13.2 4.46 ## 2 OJ 1 len 10 22.7 3.91 ## 3 OJ 2 len 10 26.1 2.66 ## 4 VC 0.5 len 10 7.98 2.75 ## 5 VC 1 len 10 16.8 2.52 ## 6 VC 2 len 10 26.1 4.80 Already we can see that at a dose of .5, average tooth length between OJ and VC methods was different. But is it significantly different? Let’s visualize it too: bxp &lt;- ggboxplot( df, x = &quot;dose&quot;, y = &quot;len&quot;, color = &quot;supp&quot;, palette = &quot;jco&quot; ) bxp We’ll skip the normality assumption tests for now, suffice it to say you WOULD have to conduct them in a real experiment as above. For now, let’s run the two-way anova: #https://www.datanovia.com/en/lessons/anova-in-r/ res.aov &lt;- anova_test(len ~ dose * supp, data=df) res.aov ## ANOVA Table (type II tests) ## ## Effect DFn DFd F p p&lt;.05 ges ## 1 dose 2 54 92.000 4.05e-18 * 0.773 ## 2 supp 1 54 15.572 2.31e-04 * 0.224 ## 3 dose:supp 2 54 4.107 2.20e-02 * 0.132 Here we find a significant main effect of Vitamin C type on tooth length as well as a significant effect of supplement type on tooth length. However, most important, we see a significant interaction between dose and supplement type on tooth length. But how do we know where these differences are? Let’s check if the simple main effect of Vitamin C type (OJ versus VC) was significant at all dosages: model &lt;- lm(len ~ dose * supp, data=df) df %&gt;% group_by(dose) %&gt;% anova_test(len ~ supp, error = model) ## # A tibble: 3 × 8 ## dose Effect DFn DFd F p `p&lt;.05` ges ## * &lt;fct&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 0.5 supp 1 54 10.5 0.002 &quot;*&quot; 0.162 ## 2 1 supp 1 54 13.3 0.00059 &quot;*&quot; 0.198 ## 3 2 supp 1 54 0.002 0.961 &quot;&quot; 0.0000449 Here we see that the effect of treatment type was only significant at dosages of .5 and 1, but not 2. In other words, there was a statistically significant difference in mean tooth length between treatment types at dosages of .5 F(1, 56) = 8.266, p&lt;.001, and 1 F(1, 56) = 10.546 , p&lt;.001, but at the highest dosage, difference between treatment types was not significant F(1, 56)=0.002, p=1. Sometimes an interaction plot makes it easier to see what is going on: plot_model(type=&quot;int&quot;, model) In the plot we can see that tooth length was higher in the OJ group compared to the VC group at low doses (dosages of .5 and 1), but the disappears at doses greater than 1. ## # A tibble: 3 × 10 ## dose term .y. group1 group2 df statistic p p.adj p.adj.signif ## * &lt;fct&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 0.5 supp len OJ VC 54 3.23 0.00209 0.00209 ** ## 2 1 supp len OJ VC 54 3.65 0.000590 0.000590 *** ## 3 2 supp len OJ VC 54 -0.0493 0.961 0.961 ns # Visualization: box plots with p-values pwc &lt;- pwc %&gt;% add_xy_position(x = &quot;dose&quot;) bxp + stat_pvalue_manual(pwc) + labs( subtitle = get_test_label(res.aov, detailed = TRUE), caption = get_pwc_label(pwc) ) Report A two-way ANOVA was conducted to examine the effects of Vitamin C and dosage on toothlength. Residual analysis was performed to test for the assumptions of the two-way ANOVA. Outliers were assessed by box plot method, normality was assessed using Shapiro-Wilk’s normality test and homogeneity of variances was assessed by Levene’s test. There were no extreme outliers, residuals were normally distributed (p &gt; 0.05) and there was homogeneity of variances (p &gt; 0.05). There was a statistically significant interaction between dosage and treatment type (vitamin C or OJ), F(1, 56) = 5.33, p = 0.001, eta2[g] = 0.09. The effect of treatment type was significant at dosages of .5 and 1, but not 2. In other words, there was a statistically significant difference in mean tooth length between treatment types at dosages of .5 F(1, 56) = 8.266, p&lt;.001, and 1 F(1, 56) = 10.546 , p&lt;.001, but at dosages more than 1, difference between treatment types were not significant F(1, 56)=0.002, p=1. "],["putting-it-all-together.html", "Chapter 6 Putting it all together 6.1 Learning More", " Chapter 6 Putting it all together Don’t stress it if you get stuck on the R portion of the assignment. 2-3 weeks before the assignment is due I will host a lab where I will walk you through the steps needed to conduct your analyses in R and finally to export it as an APA formatted pdf. You’ll be receiving an alert and an invite to the lab sometime during reading week (the lab itself won’t be until March). 6.1 Learning More Papaja Manual The material we will cover in this short assignment will only give you a taste of what R is capable of. For advanced operations, you will need to learn more. The best way to become more proficient with R, like any tool, is to actively use it. I learned R from the internet out of frustration with the limitations of SPSS. Though there was lots of trial and error and mistakes at first, over time I got better and better, and had to look up code less and less. At first it may feel daunting, but you will quickly see that there are amazing resources online. FOr example, maybe you want make your wide dataset long for some multilevel analyses–how do you do this in R? Well, a simple “how to make wide dataset long in R” will conjur up thousands of useful links where you can simply copy and paste their code and then just adjust it to use with your specific data. “How do I run an ANOVA in R?” or “ANOVA tutorial in R” will find you: https://statsandr.com/blog/anova-in-r/ The great thing about these kinds of tutorials is that they include the code and often the rationalization as to why they are conducting the analyses like they are with recommendations of what steps should come first as well as how you would test any assumptions. You will learn SOOO much not just about R, but about data this way. R Markdown R Markdown Cheatsheet. https://www.rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf "],["lab-1-putting-it-all-together.html", "Chapter 7 Lab 1: Putting it all Together 7.1 APA template tutorial that I linked in the zoom chat 7.2 Lab Video 7.3 Installing the new APA template", " Chapter 7 Lab 1: Putting it all Together 7.1 APA template tutorial that I linked in the zoom chat I recommend following along with the video-lab I’m uploading to D2l and using this website if you want more info on different things you can do with the template: https://wjschne.github.io/apaquarto/installation.html The file that I customized (see the video for where to put it or following the instructions below under “installing the new APA template”: DOWNLOAD THIS FILE. 7.2 Lab Video Lab 1 Lab 2 7.3 Installing the new APA template Hi class, some of you may find that the custom template isn’t working. Unfortunately, R made some changes that impacted the template, depending on which version of R Studio you have installed. As a result, there could be some issues. That being said, there is a new APA format now that is MUCH easier to use. Follow the instructions below (and watch the Lab videos step by step. If you have trouble with this don’t worry because I’ll walk you through it on Friday. Open R Studio Create a new Project. Like before you’ll choose New Directory. Call it Assignment2. Now select Quarto Project from the next screen. Once the project is loaded, in the Console panel, type install.packages(\"quarto\") . Now, from the Console, open the Terminal panel (should be top right) In the Terminal panel, copy and paste the following: quarto use template wjschne/apaquarto . You may have to hold CTRL-SHIFT-V to paste it or right click and paste because the usual CTR-V doesn’t work in terminal. You could even just type it out. Once you paste it in click enter, then Y for the trust check and type APA to create an APA folder for your paper. The APA folder will be inside the Assignment2 folder you just made. Once installed, click on the file tab (to the right), and you’ll see several files and an APA folder. Click to open the APA folder. Now you’re going to download a new template. DOWNLOAD THIS FILE. The file is called “PretendThesis.qmd”. The link will take you to github (it might look scary but its not), just click ctrl-shift-s once you load it to download it automatically. You can also click the 3 little dots at the far right and select download. Save it to your downloads folder. Once downloaded, place the file in the same APA folder you just created. Just use Finder in Windows or Apple OS to do this. Once it’s in the proper place, you’ll look on your Files tab in R Studio again and click on it–it’s called “PretendThesis.qmd,” remember? It should open. Click Render (where knit used to be using R Markdown) to see it rendered. We’ll go through filling this out in our lab on Friday. Here is the manual for the template in case you’d like to see what it’s capable of. "],["learning-more-1.html", "Chapter 8 Learning More", " Chapter 8 Learning More Writing a reproducible research paper with OSF and Quarto The material we will cover in this short assignment will only give you a taste of what R is capable of. For advanced operations, you will need to learn more. The best way to become more proficient with R, like any tool, is to actively use it. I learned R from the internet out of frustration with the limitations of SPSS. Though there was lots of trial and error and mistakes at first, over time I got better and better, and had to look up code less and less. At first it may feel daunting, but you will quickly see that there are amazing resources online. FOr example, maybe you want make your wide dataset long for some multilevel analyses–how do you do this in R? Well, a simple “how to make wide dataset long in R” will conjur up thousands of useful links where you can simply copy and paste their code and then just adjust it to use with your specific data. “How do I run an ANOVA in R?” or “ANOVA tutorial in R” will find you: https://statsandr.com/blog/anova-in-r/ The great thing about these kinds of tutorials is that they include the code and often the rationalization as to why they are conducting the analyses like they are with recommendations of what steps should come first as well as how you would test any assumptions. You will learn SOOO much not just about R, but about data this way. R Markdown R Markdown Cheatsheet. https://www.rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
